//Primero se ha importado toda la base de datos proporcionada y se trabajara con la misma modificando los nombres de las columnas de portugues a español.
CONSULTA PARA OBTENER EL NUMERO DE SABORES EXISTENTES.

SELECT DISTINCT SABOR FROM PRODUCTOS;

COMANDO SQL PARA MOSTRAR LAS PRIMERAS VENTAS DEL DIA 01/10/2017:
//Esta solucion utiliza lo aprendido en clase ROWNUM lo cual usa el identificador oculto de linea para enseñar los registros
SELECT * FROM NOTAS_FISCALES
WHERE
FECHA_VENTA = TO_DATE('01/10/2017','DD/MM/YYYY')
AND ROWNUM <=10;
//Esta solucion ignora ese identificador y enseña sin mas los 10 primeros registros, es lo mas cercano a LIMIT en MySql
SELECT * FROM NOTAS_FISCALES
WHERE
FECHA_VENTA = TO_DATE('01/10/2017', 'DD/MM/YYYY')
FETCH FIRST 10 ROWS ONLY;

CON DOS QUERIES CUAL FUE LA MAYOR VENTA DEL PRODUCTO ' Linha Refrescante - 1 Litro - Morango/Limao' EN CANTIDAD?

SELECT ID_ PRODUCTO FROM PRODUCTOS
WHERE NOMBRE_PRODUCTO =' Linha Refrescante - 1 Litro - Morango/Limao';

SELECT * FROM ITEMS_NOTAS_FISCALES
WHERE ID_PRODUCTO ='1101035'
ORDERED BY CANTIDAD DESC;

VENTAS POR UNA CANTIDAD IGUAL A 99 PARA ESTE PRODUCTO

SELECT COUNT(*) FROM ITEMS_NOTAS_FISCALES 
WHERE ID_PRODUCTO ='1101035'
AND CANTIDAD = 99;

VERIFIQUE LA CANTIDAD TOTAL DE VENTAS DE CADA PRODUCTO E ORDENALO DE MAYOR A MENOR.

SELECT ID_PRODUCTO, SUM(CANTIDAD) 
FROM ITEMS_NOTAS_FISCALES
GROUP BY ID_PRODUCTO 
ORDER BY SUM(CANTIDAD) DESC;

LISTA DE LOS PRODUCTOS QUE VENDERON MAS DE 394000.

SELECT ID_PRODUCTO,SUM(CANTIDAD)
FROM ITEMS_NOTAS FISCALES
GROUP BY ID_PRODUCTO
HAVIND SUM(CANTIDAD)>394000;

LISTA DE LOS NOMBRES DE LOS CLIENTES Y CLASIFICACION DE LOS MISMOS POR:
->= a 150000de limite de credito- cliente grande
entre 150000 y 110000 limite de credito- cliente medio
menor que 110000 de limite de credito- cliente pequeño


SELECT NOMBRE, LIMITE_DE_CREDITO,
(
CASE WHEN LIMITE_DE_CREDITO >= 150000 THEN 'CLIENTE_GRANDE'
     WHEN LIMITE_DE_CREDITO >=110000 AND LIMITE_DE_CREDITO <150000 THEN 'CLIENTE_MEDIO'
     ELSE 'CLIENTE_PEQUEÑO'
END
) AS CATEGORIA_CLIENTE
FROM CLIENTES ;


LA CONSULTA DE ABAJO APARECE EN UNA ACTIVIDAD DE MULTIRESPUESTA

SELECT INF.ID_PRODUCTO, P.NOMBRE_PRODUCTO, SUM(INF.CANTIDAD) FROM ITEMS_NOTAS_FISCALES I
INNER JOIN PRODUTOS P 
ON INF.ID_PRODUCTO = P.ID_PRODUCTO
GROUP BY INF.ID_PRODUCTO, P.NOMBRE_PRODUCTO HAVING SUM(INF.CANTIDAD) > 394000 
ORDER BY SUM(INF.CANTIDAD) DESC;

TENIENDO EN CUENTA ESTA CONSULTA LISTE LOS SABORES DE LOS PRODUCTOS QUE  FUERON SELECCIONADOS EN ESTA CONSULTA

SELECT DISTINCT SABOR FROM PRODUCTOS
WHERE ID_PRODUCTO IN (SELECT INF.ID_PRODUCTO FROM ITEMS_NOTAS_FISCALES INF
INNER JOIN PRODUCTOS P 
ON INF.ID_PRODUCTO = P.ID_PRODUCTO
GROUP BY INF.ID_PRODUCTO HAVING SUM(INF.CANTIDAD) > 394000 );

REDISEÑE LA CONSULTA BASE DE LA ACTIVIDAD ANTERRIOR USANDO SUBCONSULTAS

SELECT SUB.ID_PRODUCTO, SUB.NOMBRE_PRODUCTO, SUB.CANTIDAD_TOTAL
FROM(SELECT INF.ID_PRODUCTO,P.NOMBRE_PRODUCTO,SUM(INF.CANTIDAD)AS CANTIDAD_TOTAL
FROM ITEMS_NOTAS_FISCALES INF
INNER JOIN PRODUCTOS P
ON INF.ID_PRODUCTO =P.ID_PRODUCTO
GROUP BY INF.ID_PRODUCTO, P.NOMBRE_PRODUCTO)SUB
WHERE SUB.CANTIDAD_TOTAL>394000
ORDER BY SUB.CANTIDAD_TOTAL DESC;

USANDO LA MISMA CONSULTA BASE CREE UNA VIEW PARA LA LISTA DE CANTIDAD TOTAL POR PRODUCTO Y APPLIQUE LA CONDICION Y ORDENACION.

CREATE VIEW VW_CANTIDAD_PRODUCTOS AS 
SELECT INF.ID_PRODUCTO,P.NOMBRE_PRODUCTO,SUM(INF.CANTIDAD)AS CANTIDAD_TOTAL
FROM ITEMS_NOTAS_FISCALES INF
INNER JOIN PRODUCTOS P
ON INF.ID_PRODUCTO =P.ID_PRODUCTO
GROUP BY INF.ID_PRODUCTO, P.NOMBRE_PRODUCTO;

SELECT* FROM VW_CANTIDAD_PRODUCTO WHERE CANTIDAD_TOTAL>394000
ORDER BY CANTIDAD_TOTAL DESC;



